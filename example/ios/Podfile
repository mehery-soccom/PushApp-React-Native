require 'json'
require 'open3'

react_native_pods_path_output, status = Open3.capture2("node -p \"require.resolve('react-native/scripts/react_native_pods.rb')\"")
react_native_pods_path = react_native_pods_path_output.strip

require react_native_pods_path

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'MeheryEventSenderExample' do
  config = {
    :reactNativePath => "../node_modules/react-native"
  }

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # âœ… Firebase + RNFB modules
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseMessaging', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'Firebase', :modular_headers => true

  pod 'RNFBApp', :path => '../node_modules/@react-native-firebase/app'
  pod 'RNFBMessaging', :path => '../node_modules/@react-native-firebase/messaging'
  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-async-storage/async-storage'


  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )
  end
end
